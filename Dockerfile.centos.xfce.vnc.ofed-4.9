# This Dockerfile is used to build an headles vnc image based on Centos

FROM centos:7.7.1908

MAINTAINER Simon Hofmann "simon.hofmann@consol.de"
ENV REFRESHED_AT 2018-10-29

LABEL io.k8s.description="Headless VNC Container with Xfce window manager, firefox and chromium" \
      io.k8s.display-name="Headless VNC Container based on Centos" \
      io.openshift.expose-services="6901:http,5901:xvnc" \
      io.openshift.tags="vnc, centos, xfce" \
      io.openshift.non-scalable=true

## Connection ports for controlling the UI:
# VNC port:5901
# noVNC webport, connect via http://IP:6901/?password=vncpassword
ENV DISPLAY=:1 \
    VNC_PORT=5901 \
    NO_VNC_PORT=6901
EXPOSE $VNC_PORT $NO_VNC_PORT

### Envrionment config
ENV HOME=/headless \
    TERM=xterm \
    STARTUPDIR=/dockerstartup \
    INST_SCRIPTS=/headless/install \
    NO_VNC_HOME=/headless/noVNC \
    VNC_COL_DEPTH=24 \
    VNC_RESOLUTION=1280x1024 \
    VNC_PW=vncpassword \
    VNC_VIEW_ONLY=false \
    MODULEPATH=/usr/share/Modules/modulefiles:/etc/modulefiles:/act/modulefiles \
    MODULESHOME=/usr/share/Modules

WORKDIR $HOME

### Add all install scripts for further steps
ADD ./src/common/install/ $INST_SCRIPTS/
ADD ./src/centos/install/ $INST_SCRIPTS/
RUN find $INST_SCRIPTS -name '*.sh' -exec chmod a+x {} +

### Install some common tools
RUN $INST_SCRIPTS/tools.sh
ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'

### Install xvnc-server & noVNC - HTML5 based VNC viewer
RUN $INST_SCRIPTS/tigervnc.sh
RUN $INST_SCRIPTS/no_vnc.sh

### Install firefox and chrome browser
RUN $INST_SCRIPTS/firefox.sh
RUN $INST_SCRIPTS/chrome.sh

### Install xfce UI
RUN $INST_SCRIPTS/xfce_ui.sh
ADD ./src/common/xfce/ $HOME/

### configure startup
RUN $INST_SCRIPTS/libnss_wrapper.sh
ADD ./src/common/scripts $STARTUPDIR
RUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME

RUN yum -y install numactl-libs.x86_64 \
    passwd \
    libXp \
    libpng12 \
    libXmu.x86_64 \
    openssh-clients \
    rsync \
    environment-modules \
    perl-Data-Dumper \
    xz-libs \
    xz-compat-libs \
    gedit \
    libXpm \
    libicu \
    libibverbs \
    emacs \
    nano \
    zsh \
    git \
    mesa-libGLU-devel \
    &&  export ZSH=/usr/share/oh-my-zsh \
    &&  wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh \
    && yum clean all \
    && perl -p -i -e 's|^(# vim.*)|# Source environment-modules\nif [ -f /etc/profile.d/modules.sh ]; then\n . /etc/profile.d/modules.sh\nfi\n$1|' /etc/bashrc \
    && echo "emulate ksh -c '. /etc/bashrc'" > /etc/zshenv
RUN chmod 1777 /run/user

# Set MOFED version, OS version and platform
ENV MOFED_VERSION 4.9-2.2.4.0
ENV OS_VERSION rhel7.7
ENV PLATFORM x86_64

# Download and install Mellanox OFED driver
RUN cd /tmp/ && yum install -y pciutils numactl-libs gtk2 atk cairo gcc-gfortran tcsh lsof libnl3 libmnl ethtool tcl tk perl make && \
    wget -q http://content.mellanox.com/ofed/MLNX_OFED-${MOFED_VERSION}/MLNX_OFED_LINUX-${MOFED_VERSION}-${OS_VERSION}-${PLATFORM}.tgz && \
    tar -xvf MLNX_OFED_LINUX-${MOFED_VERSION}-${OS_VERSION}-${PLATFORM}.tgz && \
    MLNX_OFED_LINUX-${MOFED_VERSION}-${OS_VERSION}-${PLATFORM}/mlnxofedinstall --user-space-only --without-fw-update -q  --distro rhel7.7 && \
    cd .. && \
    rm -rf /tmp/${MOFED_DIR} && \
    rm -rf /tmp/*.tgz && \
    yum clean all

COPY ./src/common/xfce/xinitrc /etc/xdg/xfce4/xinitrc
USER 1000

ENTRYPOINT ["/dockerstartup/vnc_startup.sh"]
CMD ["--wait"]
